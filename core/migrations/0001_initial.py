# Generated by Django 2.2.1 on 2019-06-03 21:42

import core.managers
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(db_column='tx_username', max_length=64, unique=True, verbose_name='Username')),
                ('password', models.CharField(db_column='tx_password', max_length=104, verbose_name='Password')),
                ('name', models.CharField(db_column='tx_name', max_length=256, null=True, verbose_name='Name')),
                ('email', models.CharField(db_column='tx_email', max_length=256, null=True, verbose_name='E-mail')),
                ('last_login', models.DateTimeField(db_column='dt_last_login', null=True, verbose_name='Last login')),
                ('is_active', models.BooleanField(db_column='cs_active', default=True, verbose_name='Active')),
                ('is_superuser', models.BooleanField(db_column='cs_superuser', default=False, null=True, verbose_name='Superuser')),
                ('is_staff', models.BooleanField(db_column='cs_staff', default=False, null=True, verbose_name='Staff')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', core.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False, verbose_name='Id')),
                ('active', models.BooleanField(db_column='cs_active', default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='dt_created_at', verbose_name='Created at')),
                ('modified_at', models.DateTimeField(auto_now=True, db_column='dt_modified_at', null=True, verbose_name='Modified at')),
            ],
            options={
                'verbose_name': 'Chat',
                'verbose_name_plural': 'Chats',
                'db_table': 'chat',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False, verbose_name='Id')),
                ('active', models.BooleanField(db_column='cs_active', default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='dt_created_at', verbose_name='Created at')),
                ('modified_at', models.DateTimeField(auto_now=True, db_column='dt_modified_at', null=True, verbose_name='Modified at')),
                ('name', models.CharField(db_column='tx_name', max_length=64, unique=True, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
                'db_table': 'department',
            },
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False, verbose_name='Id')),
                ('active', models.BooleanField(db_column='cs_active', default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='dt_created_at', verbose_name='Created at')),
                ('modified_at', models.DateTimeField(auto_now=True, db_column='dt_modified_at', null=True, verbose_name='Modified at')),
                ('content', models.TextField(db_column='tx_content', verbose_name='Content')),
            ],
            options={
                'verbose_name': 'Notice',
                'verbose_name_plural': 'Notices',
                'db_table': 'notice',
            },
        ),
        migrations.CreateModel(
            name='ChatUser',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False, verbose_name='Id')),
                ('active', models.BooleanField(db_column='cs_active', default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='dt_created_at', verbose_name='Created at')),
                ('modified_at', models.DateTimeField(auto_now=True, db_column='dt_modified_at', null=True, verbose_name='Modified at')),
                ('chat', models.ForeignKey(db_column='id_chat', db_index=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='chat_users', to='core.Chat', verbose_name='Chat')),
                ('user', models.ForeignKey(db_column='id_user', db_index=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='chat_users', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Chat user',
                'verbose_name_plural': 'Chat users',
                'db_table': 'chat_user',
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False, verbose_name='Id')),
                ('active', models.BooleanField(db_column='cs_active', default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='dt_created_at', verbose_name='Created at')),
                ('modified_at', models.DateTimeField(auto_now=True, db_column='dt_modified_at', null=True, verbose_name='Modified at')),
                ('message', models.TextField(db_column='tx_message', verbose_name='Message')),
                ('chat', models.ForeignKey(db_column='id_chat', db_index=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='chat_messages', to='core.Chat', verbose_name='Chat')),
                ('user', models.ForeignKey(db_column='id_user', db_index=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='chat_messages', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Chat message',
                'verbose_name_plural': 'Chat messages',
                'db_table': 'chat_message',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='department',
            field=models.ForeignKey(db_column='id_department', db_index=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='users', to='core.Department', verbose_name='Department'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddIndex(
            model_name='chatuser',
            index=models.Index(fields=['user'], name='chat_user_id_user_02a982_idx'),
        ),
        migrations.AddIndex(
            model_name='chatuser',
            index=models.Index(fields=['chat'], name='chat_user_id_chat_043e6e_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['user'], name='chat_messag_id_user_e0cfbc_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['chat'], name='chat_messag_id_chat_2ed809_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['department'], name='core_user_id_depa_a41769_idx'),
        ),
    ]
